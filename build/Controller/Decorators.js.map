{"version":3,"sources":["../source/Controller/Decorators.ts"],"names":[],"mappings":";;AACA;;EAEE;AACF,oBAA2B,iBAA0C;IAA1C,kCAAA,EAAA,sBAA0C;IAEjE,MAAM,CAAC,UAAS,MAAW;QAEvB,iBAAiB,CAAC,WAAW,GAAG,CAAC,iBAAiB,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,mBAAmB,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;QAC9I,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAC;QACxC,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;IAClF,CAAC,CAAA;AACL,CAAC;AARD,gCAQC;AAED,aAAoB,IAAa,EAAE,QAAgB;IAE/C,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC9C,CAAC;AAHD,kBAGC;AAED,aAAoB,IAAa,EAAE,QAAgB;IAE/C,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC9C,CAAC;AAHD,kBAGC;AAED,cAAqB,IAAa,EAAE,QAAgB;IAEhD,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC/C,CAAC;AAHD,oBAGC;AAED,aAAoB,IAAa,EAAE,QAAgB;IAE/C,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC9C,CAAC;AAHD,kBAGC;AAED,gBAAuB,IAAa,EAAE,QAAgB;IAElD,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AACjD,CAAC;AAHD,wBAGC;AAED,eAAsB,IAAa,EAAE,QAAgB;IAEjD,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AAChD,CAAC;AAHD,sBAGC;AAED,qBAAqB,IAAI,EAAE,KAAK,EAAE,QAAgB;IAE9C,MAAM,CAAC,UAAS,MAAW,EAAE,IAAY;QAErC,MAAM,CAAC,WAAW,CAAC,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,QAAQ,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QAC7E,IAAI,OAAO,GAAsB,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC;QACrE,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QACtC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;YAChB,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,KAAK;YACX,QAAQ,EAAE,QAAQ;SACrB,CAAC,CAAC;IACP,CAAC,CAAA;AACL,CAAC","file":"Decorators.js","sourcesContent":["import { IControllerOptions } from \"./IControllerOptions\";\r\n/*\r\n    Defines a controller\r\n*/\r\nexport function Controller(controllerOptions: IControllerOptions = {})\r\n{\r\n    return function(target: any)\r\n    {\r\n        controllerOptions.injectables = (controllerOptions.injectables || []).concat(Reflect.getOwnMetadata(\"design:paramtypes\", target) || []);\r\n\t\ttarget.metaData = target.metaData || {};\r\n\t\ttarget.metaData.options = Object.assign(target.metaData.options, controllerOptions);\r\n    }\r\n}\r\n\r\nexport function ANY(path?: string, policies?: any[])\r\n{\r\n    return createRoute(\"ANY\", path, policies);\r\n}\r\n\r\nexport function GET(path?: string, policies?: any[])\r\n{\r\n    return createRoute(\"GET\", path, policies);\r\n}\r\n\r\nexport function POST(path?: string, policies?: any[])\r\n{\r\n    return createRoute(\"POST\", path, policies);\r\n}\r\n\r\nexport function PUT(path?: string, policies?: any[])\r\n{\r\n    return createRoute(\"PUT\", path, policies);\r\n}\r\n\r\nexport function DELETE(path?: string, policies?: any[])\r\n{\r\n    return createRoute(\"DELETE\", path, policies);\r\n}\r\n\r\nexport function PATCH(path?: string, policies?: any[])\r\n{\r\n    return createRoute(\"PATCH\", path, policies);\r\n}\r\n\r\nfunction createRoute(type, route, policies?: any[])\r\n{\r\n    return function(target: any, name: string)\r\n    {\r\n        target.constructor.metaData = target.constructor.metaData || { options: {} };\r\n        let options:IControllerOptions = target.constructor.metaData.options;\r\n        options.routes = options.routes || [];\r\n        options.routes.push({\r\n            method: type,// Request Method\r\n            target: name, // Target Method\r\n            path: route, // Required Route\r\n            policies: policies,\r\n        });\r\n    }\r\n}"]}